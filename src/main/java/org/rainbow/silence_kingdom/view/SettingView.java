package org.rainbow.silence_kingdom.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.apache.commons.lang3.math.NumberUtils;
import org.apache.logging.log4j.util.Strings;
import org.rainbow.silence_kingdom.conts.ViewType;
import org.rainbow.silence_kingdom.util.Meta;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import static org.rainbow.silence_kingdom.conts.Constants.*;

/**
 * Copyright (c) by Megvii.com.
 * Created by Rainbow Sun.
 * Date: 2017/10/15.
 * Time: 下午7:45.
 * Description:
 */
public class SettingView extends BaseView {
    private JPanel panel;
    private JTextField voiceThreshold;
    private JTextField totalMinutes;
    private JTextField other;
    private JButton submitButton;

    protected SettingView(BaseFrame baseFrame) {
        super(baseFrame);
        $$$setupUI$$$();
        submitButton.addActionListener(new ActionListener() {
            @Override public void actionPerformed(ActionEvent e) {
                int vs = NumberUtils.toInt(voiceThreshold.getText(), -1);
                int tm = NumberUtils.toInt(totalMinutes.getText(), -1);
                if (vs == -1 || tm == -1 || vs < 0 || vs > 100 || tm <= 0 || tm > 100) {
                    return;
                }

                updateConfig(META_VOICE_THRESHOLD_KEY, voiceThreshold.getText());
                updateConfig(META_TOTAL_MINUTES_KEY, totalMinutes.getText());
                //                updateConfig(META_CARD_DIR_PATH_KEY, cardDirPath.getText());
                //                updateConfig(META_UNACQUIRED_CARD_IMAGE_KEY, defaultImage.getText());
                //                updateConfig(META_OTHER_KEY, other.getText());
            }
        });
    }

    @Override ViewType getViewType() {
        return ViewType.SETTING;
    }

    @Override Container getView() {
        voiceThreshold.setText(Meta.getConfig(META_VOICE_THRESHOLD_KEY, META_VOICE_THRESHOLD_DEFAULT));
        totalMinutes.setText(Meta.getConfig(META_TOTAL_MINUTES_KEY, META_TOTAL_MINUTES_DEFAULT));
        //        cardDirPath.setText(Meta.getConfig(META_CARD_DIR_PATH_KEY, META_CARD_DIR_PATH_DEFAULT));
        //        defaultImage.setText(Meta.getConfig(META_UNACQUIRED_CARD_IMAGE_KEY, META_UNACQUIRED_CARD_IMAGE_DEFAULT));
        //        other.setText(Meta.getConfig(META_OTHER_KEY, META_OTHER_DEFAULT));
        return panel;
    }

    private void updateConfig(String key, String value) {
        if (Strings.isEmpty(value)) {
            return;
        }

        Meta.addConfig(key, value);
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null)
            return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(6, 6, new Insets(0, 0, 0, 0), -1, -1));
        panel.setOpaque(false);
        final JLabel label1 = new JLabel();
        label1.setText("声音阈值(1-100)");
        panel.add(label1,
                new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                        false));
        final Spacer spacer1 = new Spacer();
        panel.add(spacer1, new GridConstraints(3, 2, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel.add(spacer2, new GridConstraints(0, 2, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        panel.add(spacer3, new GridConstraints(3, 3, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        panel.add(spacer4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        panel.add(spacer5, new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        voiceThreshold = new JTextField();
        panel.add(voiceThreshold,
                new GridConstraints(1, 2, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null,
                        new Dimension(150, -1), null, 0, false));
        submitButton = new JButton();
        submitButton.setText("提交");
        panel.add(submitButton,
                new GridConstraints(3, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                        GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        panel.add(spacer6, new GridConstraints(5, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("课程时长(分钟)");
        panel.add(label2,
                new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                        false));
        totalMinutes = new JTextField();
        panel.add(totalMinutes,
                new GridConstraints(2, 2, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null,
                        new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
