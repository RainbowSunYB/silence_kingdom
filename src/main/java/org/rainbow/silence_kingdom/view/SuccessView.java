package org.rainbow.silence_kingdom.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.rainbow.silence_kingdom.conts.ViewType;
import org.rainbow.silence_kingdom.models.Card;
import org.rainbow.silence_kingdom.util.DB;

import javax.swing.*;
import java.awt.*;

/**
 * Copyright (c) by Megvii.com.
 * Created by Rainbow Sun.
 * Date: 2017/10/20.
 * Time: 下午10:48.
 * Description:
 */
public class SuccessView extends BaseView {
    private JPanel panel;
    private JPanel pannel1;
    private Card card;

    protected SuccessView(BaseFrame baseFrame, int cardId) {
        super(baseFrame);
        $$$setupUI$$$();
        card = DB.queryCardById(cardId);
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    @Override ViewType getViewType() {
        return ViewType.SUCCESS;
    }

    @Override Container getView() {
        return panel;
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null)
            return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel.setOpaque(false);
        pannel1 = new JPanel();
        pannel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        pannel1.setFocusable(true);
        Font pannel1Font = this.$$$getFont$$$("Monaco", -1, 20, pannel1.getFont());
        if (pannel1Font != null)
            pannel1.setFont(pannel1Font);
        pannel1.setOpaque(false);
        panel.add(pannel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Menlo", -1, 20, label1.getFont());
        if (label1Font != null)
            label1.setFont(label1Font);
        label1.setText("挑战成功!恭喜获得新卡牌!");
        pannel1.add(label1,
                new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                        false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
