package org.rainbow.silence_kingdom.view;

import org.rainbow.silence_kingdom.conts.ViewType;
import org.rainbow.silence_kingdom.models.Card;
import org.rainbow.silence_kingdom.util.Crypto;
import org.rainbow.silence_kingdom.util.DB;

import javax.swing.*;
import java.awt.*;

/**
 * Copyright (c) by Megvii.com.
 * Created by Rainbow Sun.
 * Date: 2017/10/21.
 * Time: 下午5:15.
 * Description:
 */
public class SuccessView extends BaseView {
    private JPanel panel1;
    private JButton label;
    private Card card;

    protected SuccessView(BaseFrame baseFrame, int cardId) {
        super(baseFrame);
        card = DB.queryCardById(cardId);
        $$$setupUI$$$();
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        panel1 = new JPanel() {
            @Override protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                ImageIcon icon = new ImageIcon(Crypto.decode(card.getImagePath()));
                Image img = icon.getImage();
                g.drawImage(img, 0, 0, icon.getIconWidth(),
                        icon.getIconHeight(), icon.getImageObserver());
            }
        };

        panel1.setLayout(new BorderLayout());

        JPanel panel = new JPanel();
        panel.setOpaque(false);
        panel1.add(panel, BorderLayout.CENTER);

        label = new JButton();
        label.setBounds(new Rectangle(500, 100));
        label.setBackground(new Color(0xFFFFFF));
        Font labelFont = this.$$$getFont$$$("Apple Braille", Font.BOLD, 20, label.getFont());
        if (labelFont != null)
            label.setFont(labelFont);
        label.setForeground(new Color(0x000000));
        label.setHorizontalAlignment(SwingConstants.CENTER);
        label.setOpaque(true);
        label.setText("挑战成功!恭喜获得新卡牌!");
        panel1.add(label, BorderLayout.SOUTH);
    }

    @Override ViewType getViewType() {
        return ViewType.SUCCESS;
    }

    @Override Container getView() {
        return panel1;
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null)
            return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
